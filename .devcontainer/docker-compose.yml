version: "3.9"

services:
  # VS Code Dev Container가 attach 할 대상 컨테이너
  app:
    # 별도 Dockerfile을 쓰는 경우
    # (예: PlantUML / Mermaid CLI 설치가 필요하면 아래 build 섹션 사용)
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    # 만약 Dockerfile 없이 기본 이미지만 쓸 거면 위 build 블록 대신 아래 image 한 줄 사용
    # image: mcr.microsoft.com/devcontainers/python:3.12

    working_dir: /workspace
    volumes:
      # 호스트의 프로젝트 루트를 컨테이너 /workspace 로 마운트
      - ..:/workspace:cached

    # Neo4j가 먼저 healthy 상태가 되어야 app 컨테이너가 뜨도록
    depends_on:
      neo4j:
        condition: service_healthy

    # 루트의 .env를 읽어 환경변수 주입 (NEO4J_PASSWORD 포함)
    env_file:
      - ../.env

    environment:
      # Python 앱에서 사용할 Neo4j 접속 정보
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: csauser
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      PYTHONUNBUFFERED: "1"
      # (선택) PlantUML/Mermaid CLI 경로 사용 시
      # PLANTUML_JAR_PATH: /workspace/lang-java-springboot/libs/plantuml.jar
      # MMDC_PATH: /usr/local/bin/mmdc

    # Dev Container가 attach만 하도록 기본은 sleep
    # (앱 실행은 VS Code 터미널에서 uvicorn 등으로 직접 수행)
    command: bash -lc "sleep infinity"

    ports:
      - "13000:13000"  # 앱에서 쓸 포트(원하면 변경/추가)
      - "7474:7474"    # Neo4j Browser (forwarding 편의를 위해 app에도 노출)
      - "7687:7687"    # Bolt

  neo4j:
    image: neo4j:5
    hostname: neo4j
    restart: unless-stopped

    ports:
      - "7478:7478"  # HTTP(Browser)
      - "7687:7687"  # Bolt

    environment:
      # 최초 관리자 neo4j 계정의 임시 비번
      NEO4J_AUTH: neo4j/neo4j-temp
      # Community는 기본 DB 1개만 사용 → 기본 DB 이름을 csadb01로 지정
      NEO4J_dbms_default__database: csadb01
      # (선택) 플러그인
      NEO4J_PLUGINS: "apoc,gds"
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1g

    volumes:
      # compose 파일(.devcontainer) 기준 상대경로
      - ../neo4j/data:/data
      - ../neo4j/import:/import
      - ../neo4j/plugins:/plugins

    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4j-temp", "RETURN 1;"]
      interval: 5s
      timeout: 3s
      retries: 30

  # 초기 사용자/보안 설정을 자동 적용하는 1회성 job 컨테이너
  neo4j-init:
    image: neo4j:5
    depends_on:
      neo4j:
        condition: service_healthy

    # 루트의 .env에서 CSAUSER_PASSWORD 로드
    env_file:
      - ../.env

    volumes:
      # 사용자/보안 설정 스크립트 (system DB에서 실행)
      - ../neo4j/scripts/init.system.cypher:/init.system.cypher:ro

    entrypoint: ["/bin/bash", "-lc"]
    command: >
      "
      set -e
      # csauser 생성 및 홈 DB 지정 (Community는 RBAC 없음)
      cypher-shell -u neo4j -p neo4j-temp -d system -f /init.system.cypher
      echo 'Neo4j Community init done'
      "
