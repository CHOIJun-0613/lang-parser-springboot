<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.carcare.domain.quote.repository.QuoteItemRepository">

    <!-- 결과 매핑 -->
    <resultMap id="QuoteItemResultMap" type="com.carcare.domain.quote.entity.QuoteItem">
        <id property="id" column="id"/>
        <result property="quoteId" column="quote_id"/>
        <result property="itemType" column="item_type" javaType="com.carcare.domain.quote.entity.QuoteItem$QuoteItemType" jdbcType="VARCHAR"/>
        <result property="description" column="description"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="totalPrice" column="total_price"/>
        <result property="warrantyPeriod" column="warranty_period"/>
        <result property="notes" column="notes"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- SQL 조각 -->
    <sql id="quoteItemColumns">
        qi.id, qi.quote_id, qi.item_type, qi.description, qi.quantity, 
        qi.unit_price, qi.total_price, qi.warranty_period, qi.notes, qi.created_at
    </sql>

    <!-- 견적 항목 생성 -->
    <insert id="insertQuoteItem" parameterType="com.carcare.domain.quote.entity.QuoteItem" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO quote_items (
            quote_id, item_type, description, quantity, 
            unit_price, total_price, warranty_period, notes, created_at
        ) VALUES (
            #{quoteId}, #{itemType}, #{description}, #{quantity},
            #{unitPrice}, #{totalPrice}, #{warrantyPeriod}, #{notes},
            COALESCE(#{createdAt}, CURRENT_TIMESTAMP)
        )
    </insert>

    <!-- 견적 항목 수정 -->
    <update id="updateQuoteItem" parameterType="com.carcare.domain.quote.entity.QuoteItem">
        UPDATE quote_items 
        SET item_type = #{itemType},
            description = #{description},
            quantity = #{quantity},
            unit_price = #{unitPrice},
            total_price = #{totalPrice},
            warranty_period = #{warrantyPeriod},
            notes = #{notes}
        WHERE id = #{id}
    </update>

    <!-- 견적 항목 삭제 -->
    <delete id="deleteQuoteItem" parameterType="long">
        DELETE FROM quote_items WHERE id = #{id}
    </delete>

    <!-- ID로 견적 항목 조회 -->
    <select id="findById" parameterType="long" resultMap="QuoteItemResultMap">
        SELECT <include refid="quoteItemColumns"/>
        FROM quote_items qi
        WHERE qi.id = #{id}
    </select>

    <!-- 견적 ID로 견적 항목 조회 -->
    <select id="findByQuoteId" parameterType="long" resultMap="QuoteItemResultMap">
        SELECT <include refid="quoteItemColumns"/>
        FROM quote_items qi
        WHERE qi.quote_id = #{quoteId}
        ORDER BY qi.id ASC
    </select>

    <!-- 견적 ID와 타입으로 견적 항목 조회 -->
    <select id="findByQuoteIdAndType" resultMap="QuoteItemResultMap">
        SELECT <include refid="quoteItemColumns"/>
        FROM quote_items qi
        WHERE qi.quote_id = #{quoteId}
        AND qi.item_type::text = #{itemType}
        ORDER BY qi.id ASC
    </select>

    <!-- 견적 ID로 견적 항목 삭제 -->
    <delete id="deleteByQuoteId" parameterType="long">
        DELETE FROM quote_items WHERE quote_id = #{quoteId}
    </delete>

    <!-- 견적 항목 일괄 생성 -->
    <insert id="insertQuoteItems" parameterType="java.util.List">
        INSERT INTO quote_items (
            quote_id, item_type, description, quantity, 
            unit_price, total_price, warranty_period, notes, created_at
        ) VALUES
        <foreach collection="items" item="item" separator=",">
            (
                #{item.quoteId}, #{item.itemType}, #{item.description}, #{item.quantity},
                #{item.unitPrice}, #{item.totalPrice}, #{item.warrantyPeriod}, #{item.notes},
                COALESCE(#{item.createdAt}, CURRENT_TIMESTAMP)
            )
        </foreach>
    </insert>

    <!-- 견적 ID로 견적 항목 개수 조회 -->
    <select id="countByQuoteId" parameterType="long" resultType="long">
        SELECT COUNT(*) 
        FROM quote_items 
        WHERE quote_id = #{quoteId}
    </select>

</mapper> 