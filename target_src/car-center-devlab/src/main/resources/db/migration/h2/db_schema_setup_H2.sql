-- H2 Database Schema Setup Script for Local Development Environment
-- Simplified version for better H2 compatibility
-- 
-- Instructions:
-- 1. This script is executed automatically during application startup
-- 2. H2 database configured with PostgreSQL compatibility mode
-- 3. File-based H2 database for persistence across restarts
--
-- Database: carcare_local (H2 file-based)
-- Version: 1.0 (Simplified for H2 compatibility)

-- Drop existing tables if they exist (in reverse dependency order)
DROP TABLE IF EXISTS notification_templates;
DROP TABLE IF EXISTS notification_settings;
DROP TABLE IF EXISTS notifications;
DROP TABLE IF EXISTS review_replies;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS payments;
DROP TABLE IF EXISTS quote_items;
DROP TABLE IF EXISTS quotes;
DROP TABLE IF EXISTS reservations;
DROP TABLE IF EXISTS service_center_operating_hours;
DROP TABLE IF EXISTS service_centers;
DROP TABLE IF EXISTS service_types;
DROP TABLE IF EXISTS vehicles;
DROP TABLE IF EXISTS vehicle_models;
DROP TABLE IF EXISTS vehicle_brands;
DROP TABLE IF EXISTS users;

-- 1. Users table - 사용자 정보 관리
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_uuid VARCHAR(36) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(100) NOT NULL,
    phone VARCHAR(20),
    role VARCHAR(20) DEFAULT 'CUSTOMER',
    is_active BOOLEAN DEFAULT true,
    email_verified BOOLEAN DEFAULT false,
    last_login_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. Vehicle brands table - 차량 브랜드 마스터 데이터
CREATE TABLE vehicle_brands (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    name_en VARCHAR(100) NOT NULL,
    code VARCHAR(10) UNIQUE,
    country VARCHAR(50) NOT NULL,
    description TEXT,
    logo_url VARCHAR(255),
    is_active BOOLEAN DEFAULT true,
    sort_order INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 3. Vehicle models table - 차량 모델 마스터 데이터
CREATE TABLE vehicle_models (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    brand_id BIGINT NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_en VARCHAR(100) NOT NULL,
    code VARCHAR(20),
    category VARCHAR(50),
    start_year INTEGER,
    end_year INTEGER,
    description TEXT,
    image_url VARCHAR(255),
    is_active BOOLEAN DEFAULT true,
    sort_order INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 4. Vehicles table - 사용자 차량 정보
CREATE TABLE vehicles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    vehicle_uuid VARCHAR(36) NOT NULL UNIQUE,
    user_id BIGINT NOT NULL,
    make VARCHAR(100) NOT NULL,
    model VARCHAR(100) NOT NULL,
    vehicle_year INTEGER NOT NULL,
    license_plate VARCHAR(20) NOT NULL UNIQUE,
    vin VARCHAR(17) UNIQUE,
    engine_type VARCHAR(50),
    fuel_type VARCHAR(20),
    mileage INTEGER DEFAULT 0,
    color VARCHAR(50),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    brand_id BIGINT,
    model_id BIGINT
);

-- 5. Service types table - 서비스 종류 마스터 데이터
CREATE TABLE service_types (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    estimated_duration INTEGER,
    base_price DECIMAL(10,2),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 6. Service centers table - 서비스센터 정보
CREATE TABLE service_centers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    address TEXT NOT NULL,
    phone_number VARCHAR(20) NOT NULL,
    email VARCHAR(255),
    average_rating DECIMAL(2,1) DEFAULT 0.0,
    review_count INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    address_detail VARCHAR(100),
    website VARCHAR(255),
    business_number VARCHAR(20) NOT NULL,
    owner_name VARCHAR(50) NOT NULL,
    latitude DOUBLE,
    longitude DOUBLE,
    verification_status VARCHAR(20) DEFAULT 'PENDING',
    verification_date TIMESTAMP,
    is_operating BOOLEAN DEFAULT false,
    specialized_services TEXT,
    facilities TEXT,
    special_notes TEXT,
    image_url VARCHAR(255),
    created_by BIGINT,
    updated_by BIGINT
);

-- 7. Service center operating hours table - 서비스센터 운영시간 관리
CREATE TABLE service_center_operating_hours (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    service_center_id BIGINT NOT NULL,
    weekly_schedule TEXT,
    special_dates TEXT,
    temporary_closures TEXT,
    default_settings TEXT,
    current_status VARCHAR(20) DEFAULT 'CLOSED',
    next_status_change_at TIMESTAMP,
    last_status_update_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by BIGINT,
    updated_by BIGINT
);

-- 8. Reservations table - 서비스 예약 정보
CREATE TABLE reservations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    reservation_uuid VARCHAR(36) NOT NULL UNIQUE,
    user_id BIGINT NOT NULL,
    vehicle_id BIGINT NOT NULL,
    service_center_id BIGINT NOT NULL,
    service_type_id BIGINT NOT NULL,
    status VARCHAR(20) DEFAULT 'PENDING',
    scheduled_date TIMESTAMP NOT NULL,
    estimated_duration INTEGER,
    customer_notes TEXT,
    mechanic_notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    confirmed_at TIMESTAMP,
    started_at TIMESTAMP,
    completed_at TIMESTAMP,
    cancelled_at TIMESTAMP,
    cancellation_reason TEXT
);

-- 9. Quotes table - 견적서 정보
CREATE TABLE quotes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    quote_uuid VARCHAR(36) NOT NULL UNIQUE,
    reservation_id BIGINT NOT NULL,
    labor_cost DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    parts_cost DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    tax_amount DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    total_amount DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    status VARCHAR(20) DEFAULT 'DRAFT',
    valid_until TIMESTAMP,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    discount_amount DECIMAL(10,2) DEFAULT 0.00,
    approved_at TIMESTAMP,
    rejected_at TIMESTAMP,
    rejection_reason TEXT
);

-- 10. Quote items table - 견적 항목 정보
CREATE TABLE quote_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    quote_id BIGINT NOT NULL,
    item_type VARCHAR(20) NOT NULL,
    description TEXT NOT NULL,
    quantity INTEGER NOT NULL DEFAULT 1,
    unit_price DECIMAL(10,2) NOT NULL,
    total_price DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    warranty_period INTEGER,
    notes TEXT
);

-- 11. Payments table - 결제 정보
CREATE TABLE payments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    payment_uuid VARCHAR(36) NOT NULL UNIQUE,
    reservation_id BIGINT NOT NULL,
    quote_id BIGINT,
    amount DECIMAL(10,2) NOT NULL,
    payment_method VARCHAR(20) NOT NULL,
    status VARCHAR(20) DEFAULT 'PENDING',
    transaction_id VARCHAR(255),
    payment_gateway VARCHAR(50),
    paid_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    receipt_url VARCHAR(500)
);

-- 12. Reviews table - 서비스 리뷰 정보
CREATE TABLE reviews (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    review_uuid VARCHAR(36) NOT NULL UNIQUE,
    reservation_id BIGINT NOT NULL,
    rating INTEGER NOT NULL,
    comment TEXT,
    is_visible BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    review_images TEXT
);

-- 13. Review replies table - 리뷰 답글 정보
CREATE TABLE review_replies (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    review_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 14. Notifications table - 알림 정보
CREATE TABLE notifications (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    notification_uuid VARCHAR(36) NOT NULL UNIQUE,
    user_id BIGINT NOT NULL,
    type VARCHAR(50) NOT NULL,
    title VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT false,
    related_entity_type VARCHAR(50),
    related_entity_id BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 15. Notification settings table - 사용자별 알림 설정
CREATE TABLE notification_settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    sms_enabled BOOLEAN DEFAULT true,
    push_enabled BOOLEAN DEFAULT true,
    email_enabled BOOLEAN DEFAULT true,
    in_app_enabled BOOLEAN DEFAULT true,
    night_mode_enabled BOOLEAN DEFAULT false,
    quiet_start_hour INTEGER DEFAULT 22,
    quiet_end_hour INTEGER DEFAULT 8,
    promotion_enabled BOOLEAN DEFAULT true,
    timezone VARCHAR(50) DEFAULT 'Asia/Seoul',
    language VARCHAR(10) DEFAULT 'ko',
    type_settings TEXT DEFAULT '{}',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 16. Notification templates table - 알림 템플릿
CREATE TABLE notification_templates (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    template_uuid VARCHAR(255) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    type VARCHAR(100) NOT NULL,
    channel VARCHAR(50) NOT NULL,
    language VARCHAR(10) NOT NULL DEFAULT 'ko',
    subject VARCHAR(500),
    title_template TEXT,
    content_template TEXT NOT NULL,
    variables TEXT,
    is_active BOOLEAN DEFAULT true,
    version INTEGER DEFAULT 1,
    description TEXT,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Foreign Key Constraints (added after all tables are created)
ALTER TABLE vehicle_models ADD CONSTRAINT fk_vehicle_models_brand_id 
    FOREIGN KEY (brand_id) REFERENCES vehicle_brands(id);

ALTER TABLE vehicles ADD CONSTRAINT fk_vehicles_user_id 
    FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE vehicles ADD CONSTRAINT fk_vehicles_brand_id 
    FOREIGN KEY (brand_id) REFERENCES vehicle_brands(id);
ALTER TABLE vehicles ADD CONSTRAINT fk_vehicles_model_id 
    FOREIGN KEY (model_id) REFERENCES vehicle_models(id);

ALTER TABLE service_center_operating_hours ADD CONSTRAINT fk_operating_hours_service_center 
    FOREIGN KEY (service_center_id) REFERENCES service_centers(id);

ALTER TABLE reservations ADD CONSTRAINT fk_reservations_user_id 
    FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE reservations ADD CONSTRAINT fk_reservations_vehicle_id 
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(id);
ALTER TABLE reservations ADD CONSTRAINT fk_reservations_service_center_id 
    FOREIGN KEY (service_center_id) REFERENCES service_centers(id);
ALTER TABLE reservations ADD CONSTRAINT fk_reservations_service_type_id 
    FOREIGN KEY (service_type_id) REFERENCES service_types(id);

ALTER TABLE quotes ADD CONSTRAINT fk_quotes_reservation_id 
    FOREIGN KEY (reservation_id) REFERENCES reservations(id);

ALTER TABLE quote_items ADD CONSTRAINT fk_quote_items_quote_id 
    FOREIGN KEY (quote_id) REFERENCES quotes(id);

ALTER TABLE payments ADD CONSTRAINT fk_payments_reservation_id 
    FOREIGN KEY (reservation_id) REFERENCES reservations(id);
ALTER TABLE payments ADD CONSTRAINT fk_payments_quote_id 
    FOREIGN KEY (quote_id) REFERENCES quotes(id);

ALTER TABLE reviews ADD CONSTRAINT fk_reviews_reservation_id 
    FOREIGN KEY (reservation_id) REFERENCES reservations(id);

ALTER TABLE review_replies ADD CONSTRAINT fk_review_replies_review_id 
    FOREIGN KEY (review_id) REFERENCES reviews(id);
ALTER TABLE review_replies ADD CONSTRAINT fk_review_replies_author_id 
    FOREIGN KEY (author_id) REFERENCES users(id);

ALTER TABLE notifications ADD CONSTRAINT fk_notifications_user_id 
    FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE notification_settings ADD CONSTRAINT fk_notification_settings_user_id 
    FOREIGN KEY (user_id) REFERENCES users(id);

-- Basic Indexes
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_vehicle_brands_name ON vehicle_brands(name);
CREATE INDEX idx_vehicle_models_brand_id ON vehicle_models(brand_id);
CREATE INDEX idx_vehicles_user_id ON vehicles(user_id);
CREATE INDEX idx_vehicles_license_plate ON vehicles(license_plate);
CREATE INDEX idx_service_centers_is_active ON service_centers(is_active);
CREATE INDEX idx_reservations_user_id ON reservations(user_id);
CREATE INDEX idx_reservations_status ON reservations(status);
CREATE INDEX idx_notifications_user_id ON notifications(user_id);

-- Insert basic vehicle brand data
INSERT INTO vehicle_brands (name, name_en, code, country, description, sort_order) VALUES
('현대', 'Hyundai', 'HYN', '대한민국', '현대자동차', 1),
('기아', 'Kia', 'KIA', '대한민국', '기아자동차', 2),
('삼성', 'Samsung', 'SMS', '대한민국', '삼성자동차', 3),
('BMW', 'BMW', 'BMW', '독일', 'BMW', 4),
('벤츠', 'Mercedes-Benz', 'MBZ', '독일', '메르세데스-벤츠', 5);

-- Insert basic vehicle models data
INSERT INTO vehicle_models (brand_id, name, name_en, code, category, start_year, description, sort_order) VALUES
(1, '아반떼', 'Avante', 'AVT', '준중형', 1990, '현대자동차 준중형 세단', 1),
(1, '소나타', 'Sonata', 'SNT', '중형', 1985, '현대자동차 중형 세단', 2),
(2, 'K5', 'K5', 'K5', '중형', 2010, '기아자동차 중형 세단', 1),
(4, '3시리즈', '3 Series', '3S', '중형', 1975, 'BMW 중형 세단', 1),
(5, 'C클래스', 'C-Class', 'C', '중형', 1993, '벤츠 중형 세단', 1);

-- Insert basic service type data
INSERT INTO service_types (name, description, category, estimated_duration, base_price) VALUES
('정기점검', '차량 정기 점검 서비스', '점검', 60, 50000),
('오일교환', '엔진오일 교환 서비스', '정비', 30, 80000),
('타이어교체', '타이어 교체 서비스', '정비', 45, 300000),
('브레이크패드교체', '브레이크 패드 교체 서비스', '정비', 90, 150000),
('배터리교체', '차량 배터리 교체 서비스', '정비', 30, 120000);

-- Schema setup completed for H2 Database (Simplified Version)
-- Total tables created: 16
-- Foreign key constraints: Added after table creation
-- Basic indexes: Essential ones only
-- 
-- H2 compatibility improvements:
-- 1. Removed complex constraints and checks
-- 2. Simplified data types
-- 3. Used DOUBLE instead of high-precision DECIMAL for coordinates
-- 4. Renamed 'year' column to 'vehicle_year' to avoid H2 keyword conflict
-- 5. Separated foreign key creation from table creation
-- 6. Reduced initial data to essential items only 